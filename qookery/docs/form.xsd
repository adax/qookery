<?xml version="1.0" encoding="UTF-8"?>
<!--
	Qookery - Declarative UI Building for Qooxdoo

	Copyright (c) Ergobyte Informatics S.A., www.ergobyte.gr

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.

	$Id$
-->
<schema xmlns="http://www.w3.org/2001/XMLSchema"
		xmlns:tns="http://www.qookery.org/ns/Form"
		xmlns:xi="http://www.w3.org/2001/XInclude"
		xmlns:xml="http://www.w3.org/XML/1998/namespace"
		targetNamespace="http://www.qookery.org/ns/Form"
		elementFormDefault="qualified">

	<import namespace="http://www.w3.org/2001/XInclude" />
	<import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd" />

	<!-- Simple types -->

	<simpleType name='x-alignment' >
		<restriction base="token">
			<enumeration value='left' />
			<enumeration value='center' />
			<enumeration value='right' />
		</restriction>
	</simpleType>

	<simpleType name='y-alignment' >
		<restriction base="token">
			<enumeration value='top' />
			<enumeration value='middle' />
			<enumeration value='bottom' />
			<enumeration value='baseline' />
		</restriction>
	</simpleType>

	<simpleType name='widget-size'>
		<union memberTypes="integer">
			<simpleType>
				<restriction base="token">
					<enumeration value='XXS' />
					<enumeration value='XS' />
					<enumeration value='S' />
					<enumeration value='M' />
					<enumeration value='L' />
					<enumeration value='XL' />
					<enumeration value='XXL' />
				</restriction>
			</simpleType>
		</union>
	</simpleType>

	<simpleType name='row-and-column-count'>
		<union memberTypes="integer">
			<simpleType>
				<restriction base="token">
					<enumeration value='auto' />
				</restriction>
			</simpleType>
		</union>
	</simpleType>

	<!-- Base component -->

	<complexType name="component">
		<complexContent>
			<extension base="tns:component-attributes">
				<choice minOccurs="0" maxOccurs="unbounded">
					<group ref="tns:statement-elements" />
				</choice>
			</extension>
		</complexContent>
	</complexType>

	<complexType name="component-attributes">
		<!-- Identity -->
		<attribute name="id" type="ID" />
		<!-- Implementation -->
		<attribute name="type" type="token" />
		<!-- Properties -->
		<attribute name="label" type="string" />
		<attribute name="icon" type="anyURI" />
		<attribute name="enabled" type="boolean" default="true" />
		<attribute name="visible" type="boolean" default="true" />
		<attribute name="text-color" type="string" default="black"/>
		<!-- Layout item -->
		<attribute name="width" type="tns:widget-size">
			<annotation><documentation>
				Component preferred width in pixels or as one of the named sizes.
			</documentation></annotation>
		</attribute>
		<attribute name="height" type="tns:widget-size">
			<annotation><documentation>
				Component preferred height in pixels or as one of the named sizes.
			</documentation></annotation>
		</attribute>
		<attribute name="min-width" type="tns:widget-size">
			<annotation><documentation>
				Component minimum width in pixels or one of the named sizes.
			</documentation></annotation>
		</attribute>
		<attribute name="min-height" type="tns:widget-size">
			<annotation><documentation>
				Component minimum height in pixels or one of the named sizes.
			</documentation></annotation>
		</attribute>
		<attribute name="max-width" type="tns:widget-size">
			<annotation><documentation>
				Component maximum width in pixels or one of the named sizes.
			</documentation></annotation>
		</attribute>
		<attribute name="max-height" type="tns:widget-size">
			<annotation><documentation>
				Component maximum height in pixels or one of the named sizes.
			</documentation></annotation>
		</attribute>
		<attribute name="margin-top" type="integer" default="0" />
		<attribute name="margin-right" type="integer" default="0" />
		<attribute name="margin-bottom" type="integer" default="0" />
		<attribute name="margin-left" type="integer" default="0" />
		<attribute name="margin"><simpleType><list itemType="integer" /></simpleType></attribute>
		<attribute name="stretch-x" type="boolean" default="true" />
		<attribute name="stretch-y" type="boolean" default="true" />
		<attribute name="stretch" type="boolean" default="true" />
		<attribute name="alignment-x" type="tns:x-alignment">
			<annotation><documentation>
				Horizontal alignment for component positioning purposes
			</documentation></annotation>
		</attribute>
		<attribute name="alignment-y" type="tns:y-alignment">
			<annotation><documentation>
				Vertical alignment for component positioning purposes
			</documentation></annotation>
		</attribute>
		<!-- Widget -->
		<attribute name="decorator" type="string" />
		<attribute name="font" type="string" />
		<attribute name="padding-top" type="integer" default="0" />
		<attribute name="padding-right" type="integer" default="0" />
		<attribute name="padding-bottom" type="integer" default="0" />
		<attribute name="padding-left" type="integer" default="0" />
		<attribute name="padding"><simpleType><list itemType="integer" /></simpleType></attribute>
		<!-- Grid layout data -->
		<attribute name="row-span" type="integer" default="1" />
		<attribute name="column-span" type="integer" default="1" />
	</complexType>

	<group name="statement-elements">
		<choice>
			<element ref="tns:set" />
			<element ref="tns:script" />
		</choice>
	</group>

	<!-- Container component type -->

	<complexType name="container-component">
		<complexContent>
			<extension base="tns:container-component-attributes">
				<choice minOccurs="0" maxOccurs="unbounded">
					<group ref="tns:statement-elements" />
					<group ref="tns:component-elements" />
				</choice>
			</extension>
		</complexContent>
	</complexType>
	
	<complexType name="container-component-attributes">
		<complexContent>
			<extension base="tns:component-attributes">
				<attribute name="row-count" type="tns:row-and-column-count" default="auto" />
				<attribute name="column-count" type="tns:row-and-column-count" default="1" />
				<attribute name="spacing-x" type="integer" default="10" />
				<attribute name="spacing-y" type="integer" default="10" />
				<attribute name="spacing" type="integer" default="10" />
				<attribute name="row-flexes"><simpleType><list itemType="integer" /></simpleType></attribute>
				<attribute name="column-flexes"><simpleType><list itemType="integer" /></simpleType></attribute>
				<attribute name="row-alignments"><simpleType><list><simpleType><union memberTypes="tns:x-alignment tns:y-alignment" /></simpleType></list></simpleType></attribute>
				<attribute name="column-alignments"><simpleType><list><simpleType><union memberTypes="tns:x-alignment tns:y-alignment" /></simpleType></list></simpleType></attribute>
			</extension>
		</complexContent>
	</complexType>

	<!-- Editable component type -->

	<complexType name="editable-component">
		<complexContent>
			<extension base="tns:editable-component-attributes">
				<choice minOccurs="0" maxOccurs="unbounded">
					<group ref="tns:statement-elements" />
				</choice>
			</extension>
		</complexContent>
	</complexType>
	
	<complexType name="editable-component-attributes">
		<complexContent>
			<extension base="tns:component-attributes">
				<attribute name="connect" type="string" />
				<attribute name="format" type="string" />
				<attribute name="read-only" type="boolean" default="false" />
				<attribute name="required" type="boolean" default="false" />
			</extension>
		</complexContent>
	</complexType>

	<!-- Field component type -->

	<complexType name="field-component">
		<complexContent>
			<extension base="tns:editable-component">
				<attribute name="placeholder" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<!-- Specialized compenent types -->

	<complexType name="label-component">
		<complexContent>
			<extension base="tns:component">
				<attribute name="wrap" type="boolean" />
				<attribute name="rich" type="boolean" />
			</extension>
		</complexContent>
	</complexType>
	
	<complexType name="html-component">
		<complexContent>
			<extension base="tns:component">
				<attribute name="html" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="image-component">
		<complexContent>
			<extension base="tns:component">
				<attribute name="source" type="anyURI" />
			</extension>
		</complexContent>
	</complexType>

	<!-- Groups -->

	<group name="component-elements">
		<choice>
			<element name="button" type="tns:component" />
			<element name="check-box" type="tns:editable-component" />
			<element name="composite" type="tns:container-component" />
			<element name="date-field" type="tns:field-component" />
			<element ref="tns:form" />
			<element name="group-box" type="tns:container-component" />
			<element name="html" type="tns:html-component" />
			<element name="image" type="tns:image-component" />
			<element name="label" type="tns:label-component" />
			<element name="list" type="tns:editable-component" />
			<element name="password-field" type="tns:field-component" />
			<element name="radio-group" type="tns:editable-component" />
			<element name="select-box" type="tns:editable-component" />
			<element name="separator" type="tns:component" />
			<element name="slider" type="tns:editable-component" />
			<element name="spinner" type="tns:editable-component" />
			<element name="tab-view" type="tns:container-component" />
			<element name="tab-view-page" type="tns:container-component" />
			<element name="table" type="tns:editable-component" />
			<element name="text-area" type="tns:field-component" />
			<element name="text-field" type="tns:field-component" />
		</choice>
	</group>

	<!-- Elements -->
	
	<element name="form">
		<complexType>
			<complexContent>
				<extension base="tns:container-component-attributes">
					<sequence>
						<element ref="tns:import" minOccurs="0" maxOccurs="unbounded" />
						<element ref="tns:bind" minOccurs="0" maxOccurs="unbounded" />
						<choice minOccurs="0" maxOccurs="unbounded">
							<group ref="tns:statement-elements" />
							<group ref="tns:component-elements" />
						</choice>
					</sequence>
					<attribute ref="xml:base" use="optional" />
				</extension>
			</complexContent>
		</complexType>
	</element>

	<element name="import">
		<annotation><documentation>
			Import a Qooxdoo class within the form's scripting context
		</documentation></annotation>
		<complexType>
			<attribute name="class" type="token" use="required">
				<annotation><documentation>
					The name of the Qooxdoo class to import
				</documentation></annotation>
			</attribute>
			<attribute name="key" type="token">
				<annotation><documentation>
					The name of the property to create in the scripting context - 
					if not set, the part of the class name after the last dot character
					will be used.
				</documentation></annotation>
			</attribute>
		</complexType>
	</element>

	<element name="bind">
		<annotation><documentation>
			Bind a URI to a prefix for scripting and data binding purposes
		</documentation></annotation>
		<complexType>
			<attribute name="prefix" type="token" use="required" />
			<attribute name="uri" type="anyURI" use="required" />
		</complexType>
	</element>

	<element name="script">
		<annotation><documentation>
			Add a JavaScript script to component
		</documentation></annotation>
		<complexType>
			<simpleContent>
				<extension base="string">
					<attribute name="event" type="token">
						<annotation><documentation>
							The name of the component's event the script should be attached to.
						</documentation></annotation>
					</attribute>
					<attribute name="action" type="token">
						<annotation><documentation>
							The name of the action the script is a handler for.
						</documentation></annotation>
					</attribute>
				</extension>
			</simpleContent>
		</complexType>
	</element>

	<element name="set">
		<annotation><documentation>
			Set a component's property
		</documentation></annotation>
		<complexType>
			<simpleContent>
				<extension base="string">
					<attribute name="property" type="token" use="required">
						<annotation><documentation>
							The name of the property to set
						</documentation></annotation>
					</attribute>
				</extension>
			</simpleContent>
		</complexType>
	</element>

</schema>
